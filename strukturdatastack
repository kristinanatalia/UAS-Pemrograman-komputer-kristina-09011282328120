package uasprokomo_09;
import java.util.Stack;

public class Uasprokomo_09 {

    public static boolean isValidExpression(String expression) {
        Stack<Character> stack = new Stack<>();

        for (char ch : expression.toCharArray()) {
            if (ch == '(' || ch == '{' || ch == '[') {
                stack.push(ch);
            } else if (ch == ')' || ch == '}' || ch == ']') {
                if (stack.isEmpty()) {
                    return false; // Terdapat kurung tutup tanpa pasangan buka
                }
                char openBracket = stack.pop();
                if (!isMatchingPair(openBracket, ch)) {
                    return false; // Kurung buka dan tutup tidak sesuai
                }
            }
        }

        return stack.isEmpty(); // Stack harus kosong jika urutan kurung benar
    }

    private static boolean isMatchingPair(char open, char close) {
        return (open == '(' && close == ')') ||
               (open == '{' && close == '}') ||
               (open == '[' && close == ']');
    }

    public static void main(String[] args) {
        String expression1 = "((a + b) * (c - d))";
        String expression2 = "{[a + b] * (c - d)}";
        String expression3 = "((a + b) * (c - d)";

        System.out.println("Expression 1 is valid: " + isValidExpression(expression1));
        System.out.println("Expression 2 is valid: " + isValidExpression(expression2));
        System.out.println("Expression 3 is valid: " + isValidExpression(expression3));
    }
}
